{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/francesco/Desktop/react-quiz/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions, Difficulty } from './API';\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(questions);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"REACT QUIZ\"), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    onClick: startTrivia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \" Start \") : null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \" Score: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \" Loading Questions ... \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \" Next Question \"));\n};\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/francesco/Desktop/react-quiz/src/App.tsx"],"names":["React","useState","fetchQuizQuestions","Difficulty","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","startTrivia","newQuestions","EASY","checkAnswer","e","nextQuestion","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAAwBC,kBAAxB,EAA4CC,UAA5C,QAA6D,OAA7D;AASA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAkB,EAAlB,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAiB,EAAjB,CAA9C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AAEAiB,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;;AAEA,QAAMY,WAAW,GAAG,YAAY;AAE9Bb,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,IAAAA,WAAW,CAAC,KAAD,CAAX;AAEA,UAAMI,YAAY,GAAG,MAAMnB,kBAAkB,CAC3CE,eAD2C,EAE3CD,UAAU,CAACmB,IAFgC,CAA7C;AAKAb,IAAAA,YAAY,CAACY,YAAD,CAAZ;AACAN,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GAhBD;;AAkBA,QAAMgB,WAAW,GAAIC,CAAD,IAA4C,CAE/D,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEIT,QAAQ,IAAIJ,WAAW,CAACc,MAAZ,KAAuBtB,eAAnC,gBACE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEgB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,GAEI,IAJR,eAKE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BANF,eAeE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEK,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,CADF;AAmBD,CAxDD;;AA0DA,eAAepB,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport QuestionCard from './components/QuestionCard';\nimport { QuestionState, fetchQuizQuestions, Difficulty} from './API';\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(questions)\n\n  const startTrivia = async () => {\n    \n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS, \n      Difficulty.EASY\n    );\n\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n\n  const nextQuestion = () => {\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>REACT QUIZ</h1>\n      { gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n          <button className=\"start\" onClick={startTrivia}> Start </button>\n        ) : null }\n      <p className=\"score\"> Score: </p>\n      <p> Loading Questions ... </p>\n      {/* <QuestionCard \n        questionNumber={number + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}> Next Question </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}