{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\francesco\\\\Desktop\\\\react-quiz\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions } from './API';\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(fetchQuizQuestions);\n\n  const startTrivia = async () => {};\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"REACT QUIZ\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    onClick: startTrivia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" Start \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" Score: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" Loading Questions ... \"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" Next Question \"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/francesco/Desktop/react-quiz/src/App.tsx"],"names":["React","useState","fetchQuizQuestions","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","startTrivia","checkAnswer","e","nextQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,SAASC,kBAAT,QAAkC,OAAlC;AAEA,MAAMC,eAAe,GAAG,EAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;AAEAgB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,kBAAZ;;AAEA,QAAMiB,WAAW,GAAG,YAAY,CAE/B,CAFD;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAA4C,CAE/D,CAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEH,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,eAaE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEG,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbF,CADF;AAiBD,CAxCD;;AA0CA,eAAelB,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport QuestionCard from './components/QuestionCard';\nimport { fetchQuizQuestions} from './API';\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(fetchQuizQuestions)\n\n  const startTrivia = async () => {\n\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n\n  const nextQuestion = () => {\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>REACT QUIZ</h1>\n      <button className=\"start\" onClick={startTrivia}> Start </button>\n      <p className=\"score\"> Score: </p>\n      <p> Loading Questions ... </p>\n      {/* <QuestionCard \n        questionNumber={number + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}> Next Question </button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}