{"ast":null,"code":"import _toConsumableArray from\"/media/vscalcione/Dati/dev/git-repository/react-typescript-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/media/vscalcione/Dati/dev/git-repository/react-typescript-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/media/vscalcione/Dati/dev/git-repository/react-typescript-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/media/vscalcione/Dati/dev/git-repository/react-typescript-quiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{fetchQuizQuestions}from'./API';import QuestionCard from'./components/QuestionCard';import{Difficulty}from'./API';import{GlobalStyle,Wrapper}from'./App.styles';var TOTAL_QUESTIONS=10;var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),number=_useState6[0],setNumber=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userAnswers=_useState8[0],setUserAnswers=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),score=_useState10[0],setScore=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),gameOver=_useState12[0],setGameOver=_useState12[1];var startTrivia=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newQuestions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setGameOver(false);_context.next=4;return fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY);case 4:newQuestions=_context.sent;setQuestions(newQuestions);setScore(0);setUserAnswers([]);setNumber(0);setLoading(false);case 10:case\"end\":return _context.stop();}}},_callee);}));return function startTrivia(){return _ref.apply(this,arguments);};}();var checkAnswer=function checkAnswer(e){if(!gameOver){var answer=e.currentTarget.value;var correct=questions[number].correct_answer===answer;if(correct)setScore(function(prev){return prev+1;});var answerObject={question:questions[number].question,answer:answer,correct:correct,correctAnswer:questions[number].correct_answer};setUserAnswers(function(prev){return[].concat(_toConsumableArray(prev),[answerObject]);});}};var nextQuestion=function nextQuestion(){var nextQ=number+1;nextQ===TOTAL_QUESTIONS?setGameOver(true):setNumber(nextQ);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(GlobalStyle,null),/*#__PURE__*/React.createElement(Wrapper,null,/*#__PURE__*/React.createElement(\"h1\",null,\"REACT QUIZ\"),gameOver||userAnswers.length===TOTAL_QUESTIONS?/*#__PURE__*/React.createElement(\"button\",{className:\"start\",onClick:startTrivia},\"Start\"):null,!gameOver?/*#__PURE__*/React.createElement(\"p\",{className:\"score\"},\"Score: \",score):null,loading?/*#__PURE__*/React.createElement(\"p\",null,\"Loading Questions...\"):null,!loading&&!gameOver&&/*#__PURE__*/React.createElement(QuestionCard,{questionNr:number+1,totalQuestions:TOTAL_QUESTIONS,question:questions[number].question,answers:questions[number].answers,userAnswer:userAnswers?userAnswers[number]:undefined,callback:checkAnswer}),!gameOver&&!loading&&userAnswers.length===number+1&&number!==TOTAL_QUESTIONS-1?/*#__PURE__*/React.createElement(\"button\",{className:\"next\",onClick:nextQuestion},\"Next Question\"):null));};export default App;","map":{"version":3,"sources":["/media/vscalcione/Dati/dev/git-repository/react-typescript-quiz/src/App.tsx"],"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","EASY","newQuestions","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","prev","answerObject","question","correctAnswer","nextQuestion","nextQ","length","answers","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { fetchQuizQuestions } from './API';\nimport QuestionCard from './components/QuestionCard';\nimport { QuestionsState, Difficulty } from './API';\nimport { GlobalStyle, Wrapper } from './App.styles';\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App: React.FC = () => {\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionsState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n  \n    setLoading(true);\n    setGameOver(false);\n    \n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    \n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  \n  };\n\n  const checkAnswer = (e: any) => {\n  \n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) setScore((prev) => prev + 1);\n\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      \n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQ = number + 1;\n    nextQ === TOTAL_QUESTIONS ? setGameOver(true) : setNumber(nextQ);\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper>\n        <h1>REACT QUIZ</h1>\n        {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n          <button className='start' onClick={startTrivia}>\n            Start\n          </button>\n        ) : null}\n        {!gameOver ? <p className='score'>Score: {score}</p> : null}\n        {loading ? <p>Loading Questions...</p> : null}\n        {!loading && !gameOver && (\n          <QuestionCard\n            questionNr={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n          <button className='next' onClick={nextQuestion}>\n            Next Question\n          </button>\n        ) : null}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}