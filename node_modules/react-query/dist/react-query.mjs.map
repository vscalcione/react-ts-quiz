{"version":3,"file":"react-query.mjs","sources":["../src/core/utils.js","../src/core/config.js","../src/core/queryCache.js","../src/core/setFocusHandler.js","../src/react/ReactQueryCacheProvider.js","../src/react/ReactQueryConfigProvider.js","../src/react/utils.js","../src/react/useIsFetching.js","../src/react/useMutation.js","../src/react/useBaseQuery.js","../src/react/useQuery.js","../src/react/usePaginatedQuery.js","../src/react/useInfiniteQuery.js"],"sourcesContent":["export const statusIdle = 'idle'\nexport const statusLoading = 'loading'\nexport const statusError = 'error'\nexport const statusSuccess = 'success'\n\nlet _uid = 0\nexport const uid = () => _uid++\nexport const cancelledError = {}\nexport let globalStateListeners = []\nexport const isServer = typeof window === 'undefined'\nexport function noop() {\n  return void 0\n}\nexport function identity(d) {\n  return d\n}\nexport let Console = console || { error: noop, warn: noop, log: noop }\n\nexport function setConsole(c) {\n  Console = c\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function stableStringifyReplacer(_, value) {\n  return isObject(value)\n    ? Object.assign(\n        {},\n        ...Object.keys(value)\n          .sort()\n          .map(key => ({\n            [key]: value[key],\n          }))\n      )\n    : value\n}\n\nexport function stableStringify(obj) {\n  return JSON.stringify(obj, stableStringifyReplacer)\n}\n\nexport function isObject(a) {\n  return a && typeof a === 'object' && !Array.isArray(a)\n}\n\nexport function deepIncludes(a, b) {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (typeof a === 'object') {\n    return !Object.keys(b).some(key => !deepIncludes(a[key], b[key]))\n  }\n\n  return false\n}\n\nexport function isDocumentVisible() {\n  return (\n    typeof document === 'undefined' ||\n    document.visibilityState === undefined ||\n    document.visibilityState === 'visible' ||\n    document.visibilityState === 'prerender'\n  )\n}\n\nexport function isOnline() {\n  return navigator.onLine === undefined || navigator.onLine\n}\n\nexport function getQueryArgs(args) {\n  if (isObject(args[0])) {\n    const { queryKey, queryFn, config } = args[0]\n    args = [queryKey, queryFn, config, ...args.slice(1)]\n  } else if (isObject(args[1])) {\n    const [queryKey, config, ...rest] = args\n    args = [queryKey, undefined, config, ...rest]\n  }\n\n  let [queryKey, queryFn, config = {}, ...rest] = args\n\n  queryFn = queryFn || config.queryFn\n\n  return [queryKey, queryFn ? { ...config, queryFn } : config, ...rest]\n}\n\n// This deep-equal is directly based on https://github.com/epoberezkin/fast-deep-equal.\n// The parts for comparing any non-JSON-supported values has been removed\nexport function deepEqual(a, b) {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      // eslint-disable-next-line eqeqeq\n      if (length != b.length) return false\n      for (i = length; i-- !== 0; ) if (!deepEqual(a[i], b[i])) return false\n      return true\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    for (i = length; i-- !== 0; ) {\n      var key = keys[i]\n\n      if (!deepEqual(a[key], b[key])) return false\n    }\n\n    return true\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport function getStatusBools(status) {\n  return {\n    isLoading: status === statusLoading,\n    isSuccess: status === statusSuccess,\n    isError: status === statusError,\n    isIdle: status === statusIdle,\n  }\n}\n","import { noop, stableStringify, identity, deepEqual } from './utils'\n\nexport const DEFAULT_CONFIG = {\n  shared: {\n    suspense: false,\n  },\n  queries: {\n    queryKeySerializerFn: defaultQueryKeySerializerFn,\n    queryFn: undefined,\n    initialStale: undefined,\n    enabled: true,\n    retry: 3,\n    retryDelay: attemptIndex => Math.min(1000 * 2 ** attemptIndex, 30000),\n    staleTime: 0,\n    cacheTime: 5 * 60 * 1000,\n    refetchOnWindowFocus: true,\n    refetchInterval: false,\n    queryFnParamsFilter: identity,\n    refetchOnMount: true,\n    isDataEqual: deepEqual,\n    onError: noop,\n    onSuccess: noop,\n    onSettled: noop,\n    useErrorBoundary: false,\n  },\n  mutations: {\n    throwOnError: false,\n    onMutate: noop,\n    onError: noop,\n    onSuccess: noop,\n    onSettled: noop,\n    useErrorBoundary: false,\n  },\n}\n\nexport const defaultConfigRef = {\n  current: DEFAULT_CONFIG,\n}\n\nexport function defaultQueryKeySerializerFn(queryKey) {\n  if (!queryKey) {\n    invalidQueryKey()\n  }\n\n  if (!Array.isArray(queryKey)) {\n    queryKey = [queryKey]\n  }\n\n  if (queryKey.some(d => typeof d === 'function')) {\n    invalidQueryKey()\n  }\n\n  const queryHash = stableStringify(queryKey)\n  queryKey = JSON.parse(queryHash)\n\n  if (!queryHash) {\n    invalidQueryKey()\n  }\n\n  return [queryHash, queryKey]\n}\n\nfunction invalidQueryKey() {\n  throw new Error('A valid query key is required!')\n}\n","import {\n  isServer,\n  functionalUpdate,\n  cancelledError,\n  isDocumentVisible,\n  statusLoading,\n  statusSuccess,\n  statusError,\n  getQueryArgs,\n  deepIncludes,\n  noop,\n  uid,\n  statusIdle,\n  Console,\n  isObject,\n  getStatusBools,\n} from './utils'\n\nimport { defaultConfigRef } from './config'\n\nexport const queryCache = makeQueryCache()\n\nexport const queryCaches = [queryCache]\n\nconst actionInit = 'Init'\nconst actionFailed = 'Failed'\nconst actionMarkStale = 'MarkStale'\nconst actionMarkGC = 'MarkGC'\nconst actionFetch = 'Fetch'\nconst actionSuccess = 'Success'\nconst actionError = 'Error'\nconst actionSetState = 'SetState'\n\nexport function makeQueryCache({ frozen = isServer, defaultConfig } = {}) {\n  // A frozen cache does not add new queries to the cache\n  const globalListeners = []\n\n  const configRef = defaultConfig\n    ? { current: defaultConfig }\n    : defaultConfigRef\n\n  const queryCache = {\n    queries: {},\n    isFetching: 0,\n  }\n\n  const notifyGlobalListeners = () => {\n    queryCache.isFetching = Object.values(queryCache.queries).reduce(\n      (acc, query) => (query.state.isFetching ? acc + 1 : acc),\n      0\n    )\n\n    globalListeners.forEach(d => d(queryCache))\n  }\n\n  queryCache.subscribe = cb => {\n    globalListeners.push(cb)\n    return () => {\n      globalListeners.splice(globalListeners.indexOf(cb), 1)\n    }\n  }\n\n  queryCache.clear = ({ notify = true } = {}) => {\n    Object.values(queryCache.queries).forEach(query => query.clear())\n    queryCache.queries = {}\n    if (notify) {\n      notifyGlobalListeners()\n    }\n  }\n\n  queryCache.getQueries = (predicate, { exact } = {}) => {\n    if (predicate === true) {\n      return Object.values(queryCache.queries)\n    }\n\n    if (typeof predicate !== 'function') {\n      const [\n        queryHash,\n        queryKey,\n      ] = configRef.current.queries.queryKeySerializerFn(predicate)\n\n      predicate = d =>\n        exact ? d.queryHash === queryHash : deepIncludes(d.queryKey, queryKey)\n    }\n\n    return Object.values(queryCache.queries).filter(predicate)\n  }\n\n  queryCache.getQuery = queryKey =>\n    queryCache.getQueries(queryKey, { exact: true })[0]\n\n  queryCache.getQueryData = queryKey =>\n    queryCache.getQuery(queryKey)?.state.data\n\n  queryCache.removeQueries = (...args) => {\n    queryCache.getQueries(...args).forEach(query => query.clear())\n  }\n\n  queryCache.cancelQueries = (...args) => {\n    queryCache.getQueries(...args).forEach(query => query.cancel())\n  }\n\n  queryCache.invalidateQueries = async (\n    predicate,\n    { refetchActive = true, refetchInactive = false, exact, throwOnError } = {}\n  ) => {\n    try {\n      return await Promise.all(\n        queryCache.getQueries(predicate, { exact }).map(query => {\n          if (query.instances.length) {\n            if (\n              refetchActive &&\n              query.instances.some(instance => instance.config.enabled)\n            ) {\n              return query.fetch()\n            }\n          } else {\n            if (refetchInactive) {\n              return query.fetch()\n            }\n          }\n\n          return query.invalidate()\n        })\n      )\n    } catch (err) {\n      if (throwOnError) {\n        throw err\n      }\n    }\n  }\n\n  queryCache.resetErrorBoundaries = () => {\n    queryCache.getQueries(true).forEach(query => {\n      query.state.throwInErrorBoundary = false\n    })\n  }\n\n  queryCache.buildQuery = (userQueryKey, config = {}) => {\n    config = {\n      ...configRef.current.shared,\n      ...configRef.current.queries,\n      ...config,\n    }\n\n    let [queryHash, queryKey] = config.queryKeySerializerFn(userQueryKey)\n\n    let query = queryCache.queries[queryHash]\n\n    if (query) {\n      Object.assign(query, { config })\n    } else {\n      query = makeQuery({\n        queryCache,\n        queryKey,\n        queryHash,\n        config,\n      })\n\n      if (config.infinite) {\n        if (\n          typeof query.state.canFetchMore === 'undefined' &&\n          typeof query.state.data !== 'undefined'\n        ) {\n          query.state.canFetchMore = config.getFetchMore(\n            query.state.data[query.state.data.length - 1],\n            query.state.data\n          )\n        }\n\n        // Here we seed the pageVariabes for the query\n        if (!query.pageVariables) {\n          query.pageVariables = [[...query.queryKey]]\n        }\n      }\n\n      // If the query started with data, schedule\n      // a stale timeout\n      if (!isServer && query.state.data) {\n        query.scheduleStaleTimeout()\n\n        // Simulate a query healing process\n        query.heal()\n        // Schedule for garbage collection in case\n        // nothing subscribes to this query\n        query.scheduleGarbageCollection()\n      }\n\n      if (!frozen) {\n        queryCache.queries[queryHash] = query\n\n        if (isServer) {\n          notifyGlobalListeners()\n        } else {\n          // Here, we setTimeout so as to not trigger\n          // any setState's in parent components in the\n          // middle of the render phase.\n          setTimeout(() => {\n            notifyGlobalListeners()\n          })\n        }\n      }\n    }\n\n    query.fallbackInstance = {\n      config: {\n        onSuccess: query.config.onSuccess,\n        onError: query.config.onError,\n        onSettled: query.config.onSettled,\n      },\n    }\n\n    return query\n  }\n\n  queryCache.prefetchQuery = async (...args) => {\n    if (\n      isObject(args[1]) &&\n      (args[1].hasOwnProperty('throwOnError') ||\n        args[1].hasOwnProperty('force'))\n    ) {\n      args[3] = args[1]\n      args[1] = undefined\n      args[2] = undefined\n    }\n\n    let [queryKey, config, { force, throwOnError } = {}] = getQueryArgs(args)\n\n    try {\n      const query = queryCache.buildQuery(queryKey, config)\n      if (force || query.state.isStale) {\n        await query.fetch()\n      }\n      return query.state.data\n    } catch (err) {\n      if (throwOnError) {\n        throw err\n      }\n      Console.error(err)\n    }\n  }\n\n  queryCache.setQueryData = (queryKey, updater, config = {}) => {\n    let query = queryCache.getQuery(queryKey)\n\n    if (!query) {\n      query = queryCache.buildQuery(queryKey, config)\n    }\n\n    query.setData(updater)\n  }\n\n  function makeQuery({ queryCache, queryKey, queryHash, config }) {\n    const initialData =\n      typeof config.initialData === 'function'\n        ? config.initialData()\n        : config.initialData\n\n    const hasInitialData = typeof initialData !== 'undefined'\n\n    const isStale =\n      !config.enabled ||\n      (typeof config.initialStale === 'function'\n        ? config.initialStale()\n        : config.initialStale ?? !hasInitialData)\n\n    const initialStatus = hasInitialData\n      ? statusSuccess\n      : config.enabled\n      ? statusLoading\n      : statusIdle\n\n    let query = {\n      queryKey,\n      queryHash,\n      config,\n      instances: [],\n      state: queryReducer(undefined, {\n        type: actionInit,\n        initialStatus,\n        initialData,\n        hasInitialData,\n        isStale,\n      }),\n    }\n\n    query.dispatch = action => {\n      query.state = queryReducer(query.state, action)\n      query.instances.forEach(d => d.onStateUpdate(query.state))\n      notifyGlobalListeners()\n    }\n\n    query.scheduleStaleTimeout = () => {\n      if (isServer) return\n      clearTimeout(query.staleTimeout)\n\n      if (query.config.staleTime === Infinity) {\n        return\n      }\n\n      query.staleTimeout = setTimeout(() => {\n        if (queryCache.getQuery(query.queryKey)) {\n          query.invalidate()\n        }\n      }, query.config.staleTime)\n    }\n\n    query.invalidate = () => {\n      clearTimeout(query.staleTimeout)\n      query.dispatch({ type: actionMarkStale })\n    }\n\n    query.scheduleGarbageCollection = () => {\n      if (!queryCache.queries[query.queryHash]) return\n      if (query.config.cacheTime === Infinity) {\n        return\n      }\n      query.dispatch({ type: actionMarkGC })\n      query.cacheTimeout = setTimeout(\n        () => {\n          queryCache.removeQueries(\n            d =>\n              d.state.markedForGarbageCollection &&\n              d.queryHash === query.queryHash\n          )\n        },\n        typeof query.state.data === 'undefined' &&\n          query.state.status !== 'error'\n          ? 0\n          : query.config.cacheTime\n      )\n    }\n\n    query.refetch = async () => {\n      try {\n        await query.fetch()\n      } catch (error) {\n        Console.error(error)\n      }\n    }\n\n    query.heal = () => {\n      // Stop the query from being garbage collected\n      clearTimeout(query.cacheTimeout)\n\n      // Mark the query as not cancelled\n      query.cancelled = null\n    }\n\n    query.cancel = () => {\n      query.cancelled = cancelledError\n\n      if (query.cancelPromises) {\n        query.cancelPromises()\n      }\n\n      delete query.promise\n    }\n\n    query.clearIntervals = () => {\n      query.instances.forEach(instance => {\n        instance.clearInterval()\n      })\n    }\n\n    query.setState = updater =>\n      query.dispatch({ type: actionSetState, updater })\n\n    query.setData = updater => {\n      // Set data and mark it as cached\n      query.dispatch({ type: actionSuccess, updater })\n\n      // Schedule a fresh invalidation!\n      query.scheduleStaleTimeout()\n    }\n\n    query.clear = () => {\n      clearTimeout(query.staleTimeout)\n      clearTimeout(query.cacheTimeout)\n      clearTimeout(query.retryTimeout)\n      query.clearIntervals()\n      query.cancel()\n      query.dispatch = noop\n      delete queryCache.queries[query.queryHash]\n    }\n\n    query.subscribe = (onStateUpdate = noop) => {\n      const instance = {\n        id: uid(),\n        onStateUpdate,\n      }\n\n      query.instances.push(instance)\n\n      query.heal()\n\n      instance.clearInterval = () => {\n        clearInterval(instance.refetchIntervalId)\n        delete instance.refetchIntervalId\n      }\n\n      instance.updateConfig = config => {\n        const oldConfig = instance.config\n\n        // Update the config\n        instance.config = config\n\n        if (!isServer) {\n          if (oldConfig?.refetchInterval === config.refetchInterval) {\n            return\n          }\n\n          query.clearIntervals()\n\n          const minInterval = Math.min(\n            ...query.instances.map(d => d.config.refetchInterval || Infinity)\n          )\n\n          if (\n            !instance.refetchIntervalId &&\n            minInterval > 0 &&\n            minInterval < Infinity\n          ) {\n            instance.refetchIntervalId = setInterval(() => {\n              if (\n                query.instances.some(instance => instance.config.enabled) &&\n                (isDocumentVisible() ||\n                  query.instances.some(\n                    instance => instance.config.refetchIntervalInBackground\n                  ))\n              ) {\n                query.fetch()\n              }\n            }, minInterval)\n          }\n        }\n      }\n\n      instance.run = async () => {\n        try {\n          // Perform the refetch for this query if necessary\n          if (\n            query.config.enabled && // Don't auto refetch if disabled\n            !query.wasSuspended && // Don't double refetch for suspense\n            query.state.isStale && // Only refetch if stale\n            (query.config.refetchOnMount || query.instances.length === 1)\n          ) {\n            await query.fetch()\n          }\n\n          query.wasSuspended = false\n        } catch (error) {\n          Console.error(error)\n        }\n      }\n\n      instance.unsubscribe = () => {\n        query.instances = query.instances.filter(d => d.id !== instance.id)\n\n        if (!query.instances.length) {\n          query.clearIntervals()\n          query.cancel()\n\n          if (!isServer) {\n            // Schedule garbage collection\n            query.scheduleGarbageCollection()\n          }\n        }\n      }\n\n      return instance\n    }\n\n    // Set up the core fetcher function\n    const tryFetchData = async (fn, ...args) => {\n      try {\n        // Perform the query\n        const promise = fn(...query.config.queryFnParamsFilter(args))\n\n        query.cancelPromises = () => promise.cancel?.()\n\n        const data = await promise\n        delete query.shouldContinueRetryOnFocus\n\n        delete query.cancelPromises\n        if (query.cancelled) throw query.cancelled\n\n        return data\n      } catch (error) {\n        delete query.cancelPromises\n        if (query.cancelled) throw query.cancelled\n\n        // If we fail, increase the failureCount\n        query.dispatch({ type: actionFailed })\n\n        // Do we need to retry the request?\n        if (\n          query.config.retry === true ||\n          query.state.failureCount <= query.config.retry ||\n          (typeof query.config.retry === 'function' &&\n            query.config.retry(query.state.failureCount, error))\n        ) {\n          // Only retry if the document is visible\n          if (!isDocumentVisible()) {\n            // set this flag to continue retries on focus\n            query.shouldContinueRetryOnFocus = true\n            return new Promise(noop)\n          }\n\n          delete query.shouldContinueRetryOnFocus\n\n          // Determine the retryDelay\n          const delay = functionalUpdate(\n            query.config.retryDelay,\n            query.state.failureCount\n          )\n\n          // Return a new promise with the retry\n          return await new Promise((resolve, reject) => {\n            // Keep track of the retry timeout\n            query.retryTimeout = setTimeout(async () => {\n              if (query.cancelled) return reject(query.cancelled)\n\n              try {\n                const data = await tryFetchData(fn, ...args)\n                if (query.cancelled) return reject(query.cancelled)\n                resolve(data)\n              } catch (error) {\n                if (query.cancelled) return reject(query.cancelled)\n                reject(error)\n              }\n            }, delay)\n          })\n        }\n\n        throw error\n      }\n    }\n\n    query.fetch = async ({ fetchMore } = {}) => {\n      let queryFn = query.config.queryFn\n\n      if (!queryFn) {\n        return\n      }\n\n      if (query.config.infinite) {\n        const originalQueryFn = queryFn\n\n        queryFn = async () => {\n          const data = []\n          const pageVariables = [...query.pageVariables]\n          const rebuiltPageVariables = []\n\n          do {\n            const args = pageVariables.shift()\n\n            if (!data.length) {\n              // the first page query doesn't need to be rebuilt\n              data.push(await originalQueryFn(...args))\n              rebuiltPageVariables.push(args)\n            } else {\n              // get an up-to-date cursor based on the previous data set\n\n              const nextCursor = query.config.getFetchMore(\n                data[data.length - 1],\n                data\n              )\n\n              // break early if there's no next cursor\n              // otherwise we'll start from the beginning\n              // which will cause unwanted duplication\n              if (!nextCursor) {\n                break\n              }\n\n              const pageArgs = [\n                // remove the last argument (the previously saved cursor)\n                ...args.slice(0, -1),\n                nextCursor,\n              ]\n\n              data.push(await originalQueryFn(...pageArgs))\n              rebuiltPageVariables.push(pageArgs)\n            }\n          } while (pageVariables.length)\n\n          query.state.canFetchMore = query.config.getFetchMore(\n            data[data.length - 1],\n            data\n          )\n          query.pageVariables = rebuiltPageVariables\n\n          return data\n        }\n\n        if (fetchMore) {\n          queryFn = async (...args) => {\n            const { fetchMoreInfo, previous } = fetchMore\n            try {\n              query.setState(old => ({\n                ...old,\n                isFetchingMore: previous ? 'previous' : 'next',\n              }))\n\n              const newArgs = [...args, fetchMoreInfo]\n\n              query.pageVariables[previous ? 'unshift' : 'push'](newArgs)\n\n              const newData = await originalQueryFn(...newArgs)\n\n              const data = previous\n                ? [newData, ...query.state.data]\n                : [...query.state.data, newData]\n\n              query.state.canFetchMore = query.config.getFetchMore(\n                newData,\n                data\n              )\n\n              return data\n            } finally {\n              query.setState(old => ({\n                ...old,\n                isFetchingMore: false,\n              }))\n            }\n          }\n        }\n      }\n\n      // Create a new promise for the query cache if necessary\n      if (!query.promise) {\n        query.promise = (async () => {\n          // If there are any retries pending for this query, kill them\n          query.cancelled = null\n\n          const getCallbackInstances = () => {\n            const callbackInstances = [...query.instances]\n\n            if (query.wasSuspended) {\n              callbackInstances.unshift(query.fallbackInstance)\n            }\n            return callbackInstances\n          }\n\n          try {\n            // Set up the query refreshing state\n            query.dispatch({ type: actionFetch })\n\n            // Try to get the data\n            let data = await tryFetchData(queryFn, ...query.queryKey)\n\n            query.setData(old =>\n              query.config.isDataEqual(old, data) ? old : data\n            )\n\n            getCallbackInstances().forEach(\n              instance =>\n                instance.config.onSuccess &&\n                instance.config.onSuccess(query.state.data)\n            )\n\n            getCallbackInstances().forEach(\n              instance =>\n                instance.config.onSettled &&\n                instance.config.onSettled(query.state.data, null)\n            )\n\n            delete query.promise\n\n            return data\n          } catch (error) {\n            query.dispatch({\n              type: actionError,\n              cancelled: error === query.cancelled,\n              error,\n            })\n\n            delete query.promise\n\n            if (error !== query.cancelled) {\n              getCallbackInstances().forEach(\n                instance =>\n                  instance.config.onError && instance.config.onError(error)\n              )\n\n              getCallbackInstances().forEach(\n                instance =>\n                  instance.config.onSettled &&\n                  instance.config.onSettled(undefined, error)\n              )\n\n              throw error\n            }\n          }\n        })()\n      }\n\n      return query.promise\n    }\n\n    if (query.config.infinite) {\n      query.fetchMore = (\n        fetchMoreInfo = query.state.canFetchMore,\n        { previous = false } = {}\n      ) => query.fetch({ fetchMore: { fetchMoreInfo, previous } })\n    }\n\n    return query\n  }\n\n  return queryCache\n}\n\nexport function queryReducer(state, action) {\n  const newState = switchActions(state, action)\n\n  return Object.assign(newState, getStatusBools(newState.status))\n}\n\nfunction switchActions(state, action) {\n  switch (action.type) {\n    case actionInit:\n      return {\n        status: action.initialStatus,\n        error: null,\n        isFetching: action.initialStatus === 'loading',\n        failureCount: 0,\n        isStale: action.isStale,\n        markedForGarbageCollection: false,\n        data: action.initialData,\n        updatedAt: action.hasInitialData ? Date.now() : 0,\n      }\n    case actionFailed:\n      return {\n        ...state,\n        failureCount: state.failureCount + 1,\n      }\n    case actionMarkStale:\n      return {\n        ...state,\n        isStale: true,\n      }\n    case actionMarkGC: {\n      return {\n        ...state,\n        markedForGarbageCollection: true,\n      }\n    }\n    case actionFetch:\n      return {\n        ...state,\n        status:\n          typeof state.data !== 'undefined' ? statusSuccess : statusLoading,\n        isFetching: true,\n        failureCount: 0,\n      }\n    case actionSuccess:\n      return {\n        ...state,\n        status: statusSuccess,\n        data: functionalUpdate(action.updater, state.data),\n        error: null,\n        isStale: false,\n        isFetching: false,\n        updatedAt: Date.now(),\n        failureCount: 0,\n      }\n    case actionError:\n      return {\n        ...state,\n        isFetching: false,\n        isStale: true,\n        ...(!action.cancelled && {\n          status: statusError,\n          error: action.error,\n          throwInErrorBoundary: true,\n        }),\n      }\n    case actionSetState:\n      return functionalUpdate(action.updater, state)\n    default:\n      throw new Error()\n  }\n}\n","import { isOnline, isDocumentVisible, Console, isServer } from './utils'\nimport { queryCaches } from './queryCache'\n\nconst visibilityChangeEvent = 'visibilitychange'\nconst focusEvent = 'focus'\n\nconst onWindowFocus = () => {\n  if (isDocumentVisible() && isOnline()) {\n    queryCaches.forEach(queryCache =>\n      queryCache\n        .invalidateQueries(query => {\n          if (!query.instances.length) {\n            return false\n          }\n\n          if (!query.instances.some(instance => instance.config.enabled)) {\n            return false\n          }\n\n          if (!query.state.isStale) {\n            return false\n          }\n\n          if (query.shouldContinueRetryOnFocus) {\n            // delete promise, so refetching will create new one\n            delete query.promise\n          }\n\n          return query.config.refetchOnWindowFocus\n        })\n        .catch(Console.error)\n    )\n  }\n}\n\nlet removePreviousHandler\n\nexport function setFocusHandler(callback) {\n  // Unsub the old watcher\n  if (removePreviousHandler) {\n    removePreviousHandler()\n  }\n  // Sub the new watcher\n  removePreviousHandler = callback(onWindowFocus)\n}\n\nsetFocusHandler(handleFocus => {\n  // Listen to visibillitychange and focus\n  if (!isServer && window?.addEventListener) {\n    window.addEventListener(visibilityChangeEvent, handleFocus, false)\n    window.addEventListener(focusEvent, handleFocus, false)\n\n    return () => {\n      // Be sure to unsubscribe if a new handler is set\n      window.removeEventListener(visibilityChangeEvent, handleFocus)\n      window.removeEventListener(focusEvent, handleFocus)\n    }\n  }\n})\n","import React from 'react'\nimport { queryCache, makeQueryCache } from '../core'\n\nexport const queryCacheContext = React.createContext(queryCache)\n\nexport const queryCaches = [queryCache]\n\nexport const useQueryCache = () => React.useContext(queryCacheContext)\n\nexport function ReactQueryCacheProvider({ queryCache, children }) {\n  const resolvedQueryCache = React.useMemo(\n    () => queryCache || makeQueryCache(),\n    [queryCache]\n  )\n\n  React.useEffect(() => {\n    queryCaches.push(resolvedQueryCache)\n\n    return () => {\n      // remove the cache from the active list\n      const i = queryCaches.indexOf(resolvedQueryCache)\n      if (i > -1) {\n        queryCaches.splice(i, 1)\n      }\n      // if the resolvedQueryCache was created by us, we need to tear it down\n      if (queryCache == null) {\n        resolvedQueryCache.clear()\n      }\n    }\n  }, [resolvedQueryCache, queryCache])\n\n  return (\n    <queryCacheContext.Provider value={resolvedQueryCache}>\n      {children}\n    </queryCacheContext.Provider>\n  )\n}\n","import React from 'react'\nimport { DEFAULT_CONFIG, defaultConfigRef } from '../core/config'\n\n//\n\nconst configContext = React.createContext()\n\nexport function useConfigContext() {\n  return React.useContext(configContext) || defaultConfigRef.current\n}\n\nexport function ReactQueryConfigProvider({ config, children }) {\n  let configContextValue = useConfigContext()\n\n  const newConfig = React.useMemo(() => {\n    const { shared = {}, queries = {}, mutations = {} } = config\n    const {\n      shared: contextShared = {},\n      queries: contextQueries = {},\n      mutations: contextMutations = {},\n    } = configContextValue\n\n    return {\n      shared: {\n        ...contextShared,\n        ...shared,\n      },\n      queries: {\n        ...contextQueries,\n        ...queries,\n      },\n      mutations: {\n        ...contextMutations,\n        ...mutations,\n      },\n    }\n  }, [config, configContextValue])\n\n  React.useEffect(() => {\n    // restore previous config on unmount\n    return () => {\n      defaultConfigRef.current = { ...(configContextValue || DEFAULT_CONFIG) }\n    }\n  }, [configContextValue])\n\n  if (!configContextValue) {\n    defaultConfigRef.current = newConfig\n  }\n\n  return (\n    <configContext.Provider value={newConfig}>\n      {children}\n    </configContext.Provider>\n  )\n}\n","import React from 'react'\n\nimport { useConfigContext } from './ReactQueryConfigProvider'\n\nimport {\n  uid,\n  isServer,\n  statusError,\n  statusSuccess,\n  getQueryArgs,\n} from '../core/utils'\n\nexport function useUid() {\n  const ref = React.useRef(null)\n\n  if (ref.current === null) {\n    ref.current = uid()\n  }\n\n  return ref.current\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\nexport function useQueryArgs(args) {\n  const configContext = useConfigContext()\n\n  let [queryKey, config, ...rest] = getQueryArgs(args)\n\n  // Build the final config\n  config = {\n    ...configContext.shared,\n    ...configContext.queries,\n    ...config,\n  }\n\n  return [queryKey, config, ...rest]\n}\n\nexport function useMountedCallback(callback) {\n  const mounted = React.useRef(false)\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mounted.current = true\n    return () => (mounted.current = false)\n  }, [])\n\n  return React.useCallback(\n    (...args) => (mounted.current ? callback(...args) : void 0),\n    [callback]\n  )\n}\n\nexport function handleSuspense(queryInfo) {\n  if (\n    queryInfo.query.config.suspense ||\n    queryInfo.query.config.useErrorBoundary\n  ) {\n    if (\n      queryInfo.query.state.status === statusError &&\n      queryInfo.query.state.throwInErrorBoundary\n    ) {\n      throw queryInfo.error\n    }\n\n    if (\n      queryInfo.query.config.suspense &&\n      queryInfo.status !== statusSuccess &&\n      queryInfo.query.config.enabled\n    ) {\n      queryInfo.query.wasSuspended = true\n      throw queryInfo.query.fetch()\n    }\n  }\n}\n","import React from 'react'\n\nimport { useMountedCallback } from './utils'\nimport { useQueryCache } from './ReactQueryCacheProvider'\n\nexport function useIsFetching() {\n  const queryCache = useQueryCache()\n  const [state, unsafeRerender] = React.useReducer(d => d + 1, 1)\n  const rerender = useMountedCallback(unsafeRerender)\n\n  React.useEffect(() => queryCache.subscribe(rerender), [queryCache, rerender])\n\n  return React.useMemo(() => state && queryCache.isFetching, [\n    queryCache.isFetching,\n    state,\n  ])\n}\n","import React from 'react'\n\n//\n\nimport { useConfigContext } from './ReactQueryConfigProvider'\nimport { useGetLatest, useMountedCallback } from './utils'\nimport {\n  statusIdle,\n  statusLoading,\n  statusSuccess,\n  statusError,\n  Console,\n  uid,\n  noop,\n} from '../core/utils'\n\nconst getDefaultState = () => ({\n  status: statusIdle,\n  data: undefined,\n  error: null,\n})\n\nconst actionReset = {}\nconst actionLoading = {}\nconst actionResolve = {}\nconst actionReject = {}\n\nfunction mutationReducer(state, action) {\n  if (action.type === actionReset) {\n    return getDefaultState()\n  }\n  if (action.type === actionLoading) {\n    return {\n      status: statusLoading,\n    }\n  }\n  if (action.type === actionResolve) {\n    return {\n      status: statusSuccess,\n      data: action.data,\n    }\n  }\n  if (action.type === actionReject) {\n    return {\n      status: statusError,\n      error: action.error,\n    }\n  }\n  throw new Error()\n}\n\nexport function useMutation(mutationFn, config = {}) {\n  const [state, unsafeDispatch] = React.useReducer(\n    mutationReducer,\n    null,\n    getDefaultState\n  )\n\n  const dispatch = useMountedCallback(unsafeDispatch)\n\n  const getMutationFn = useGetLatest(mutationFn)\n\n  const getConfig = useGetLatest({\n    ...useConfigContext().shared,\n    ...useConfigContext().mutations,\n    ...config,\n  })\n\n  const latestMutationRef = React.useRef()\n\n  const mutate = React.useCallback(\n    async (\n      variables,\n      { onSuccess = noop, onError = noop, onSettled = noop, throwOnError } = {}\n    ) => {\n      const config = getConfig()\n\n      const mutationId = uid()\n      latestMutationRef.current = mutationId\n\n      const isLatest = () => latestMutationRef.current === mutationId\n\n      let snapshotValue\n\n      try {\n        dispatch({ type: actionLoading })\n        snapshotValue = await config.onMutate(variables)\n\n        let data = await getMutationFn()(variables)\n\n        if (isLatest()) {\n          dispatch({ type: actionResolve, data })\n        }\n\n        await config.onSuccess(data, variables)\n        await onSuccess(data, variables)\n        await config.onSettled(data, null, variables)\n        await onSettled(data, null, variables)\n\n        return data\n      } catch (error) {\n        Console.error(error)\n        await config.onError(error, variables, snapshotValue)\n        await onError(error, variables, snapshotValue)\n        await config.onSettled(undefined, error, variables, snapshotValue)\n        await onSettled(undefined, error, variables, snapshotValue)\n\n        if (isLatest()) {\n          dispatch({ type: actionReject, error })\n        }\n\n        if (throwOnError ?? config.throwOnError) {\n          throw error\n        }\n      }\n    },\n    [dispatch, getConfig, getMutationFn]\n  )\n\n  const reset = React.useCallback(() => dispatch({ type: actionReset }), [\n    dispatch,\n  ])\n\n  React.useEffect(() => {\n    const { suspense, useErrorBoundary } = getConfig()\n\n    if ((useErrorBoundary ?? suspense) && state.error) {\n      throw state.error\n    }\n  }, [getConfig, state.error])\n\n  return [\n    mutate,\n    {\n      ...state,\n      reset,\n      isIdle: state.status === statusIdle,\n      isLoading: state.status === statusLoading,\n      isSuccess: state.status === statusSuccess,\n      isError: state.status === statusError,\n    },\n  ]\n}\n","import React from 'react'\n\n//\n\nimport { useQueryCache } from './ReactQueryCacheProvider'\nimport { useMountedCallback } from './utils'\n\nexport function useBaseQuery(queryKey, config = {}) {\n  // Make a rerender function\n  const rerender = useMountedCallback(React.useState()[1])\n\n  // Get the query cache\n  const queryCache = useQueryCache()\n\n  // Build the query for use\n  const query = queryCache.buildQuery(queryKey, config)\n\n  // Create a query instance ref\n  const instanceRef = React.useRef()\n\n  // Subscribe to the query when the subscribe function changes\n  React.useEffect(() => {\n    instanceRef.current = query.subscribe(() => rerender({}))\n\n    // Unsubscribe when things change\n    return instanceRef.current.unsubscribe\n  }, [query, rerender])\n\n  // Always update the config\n  React.useEffect(() => {\n    instanceRef.current.updateConfig(config)\n  })\n\n  // Run the instance when the query or enabled change\n  React.useEffect(() => {\n    if (config.enabled && query) {\n      // Just for change detection\n    }\n    instanceRef.current.run()\n  }, [config.enabled, query])\n\n  return {\n    ...query,\n    ...query.state,\n    query,\n  }\n}\n","import { useBaseQuery } from './useBaseQuery'\nimport { useQueryArgs, handleSuspense } from './utils'\n\nexport function useQuery(...args) {\n  const query = useBaseQuery(...useQueryArgs(args))\n\n  handleSuspense(query)\n\n  return query\n}\n","import React from 'react'\n\n//\n\nimport { useBaseQuery } from './useBaseQuery'\nimport { useQueryArgs, handleSuspense } from './utils'\nimport { getStatusBools } from '../core/utils'\n\n// A paginated query is more like a \"lag\" query, which means\n// as the query key changes, we keep the results from the\n// last query and use them as placeholder data in the next one\n// We DON'T use it as initial data though. That's important\nexport function usePaginatedQuery(...args) {\n  let [queryKey, config = {}] = useQueryArgs(args)\n\n  // Keep track of the latest data result\n  const lastDataRef = React.useRef()\n\n  // If latestData is there, don't use initialData\n  if (typeof lastDataRef.current !== 'undefined') {\n    delete config.initialData\n  }\n\n  // Make the query as normal\n  const queryInfo = useBaseQuery(queryKey, config)\n\n  // If the query is disabled, get rid of the latest data\n  if (!queryInfo.query.config.enabled) {\n    lastDataRef.current = undefined\n  }\n\n  // Get the real data and status from the query\n  let { data: latestData, status } = queryInfo\n\n  // If the real query succeeds, and there is data in it,\n  // update the latest data\n  React.useEffect(() => {\n    if (status === 'success' && typeof latestData !== 'undefined') {\n      lastDataRef.current = latestData\n    }\n  }, [latestData, status])\n\n  // Resolved data should be either the real data we're waiting on\n  // or the latest placeholder data\n  let resolvedData = latestData\n  if (typeof resolvedData === 'undefined') {\n    resolvedData = lastDataRef.current\n  }\n\n  // If we have any data at all from either, we\n  // need to make sure the status is success, even though\n  // the real query may still be loading\n  if (typeof resolvedData !== 'undefined') {\n    const overrides = { status: 'success', ...getStatusBools('success') }\n    Object.assign(queryInfo.query.state, overrides)\n    Object.assign(queryInfo, overrides)\n  }\n\n  const paginatedQueryInfo = {\n    ...queryInfo,\n    resolvedData,\n    latestData,\n  }\n\n  handleSuspense(paginatedQueryInfo)\n\n  return paginatedQueryInfo\n}\n","//\n\nimport { useBaseQuery } from './useBaseQuery'\nimport { useQueryArgs, handleSuspense } from './utils'\n\nexport function useInfiniteQuery(...args) {\n  let [queryKey, config] = useQueryArgs(args)\n\n  config.infinite = true\n\n  const queryInfo = useBaseQuery(queryKey, config)\n\n  handleSuspense(queryInfo)\n\n  return queryInfo\n}\n"],"names":["statusIdle","statusLoading","statusError","statusSuccess","_uid","uid","cancelledError","isServer","window","noop","identity","d","Console","console","error","warn","log","setConsole","c","functionalUpdate","updater","old","stableStringifyReplacer","_","value","isObject","Object","assign","keys","sort","map","key","stableStringify","obj","JSON","stringify","a","Array","isArray","deepIncludes","b","some","isDocumentVisible","document","visibilityState","undefined","isOnline","navigator","onLine","getQueryArgs","args","queryKey","queryFn","config","slice","rest","deepEqual","length","i","valueOf","prototype","hasOwnProperty","call","getStatusBools","status","isLoading","isSuccess","isError","isIdle","DEFAULT_CONFIG","shared","suspense","queries","queryKeySerializerFn","defaultQueryKeySerializerFn","initialStale","enabled","retry","retryDelay","attemptIndex","Math","min","staleTime","cacheTime","refetchOnWindowFocus","refetchInterval","queryFnParamsFilter","refetchOnMount","isDataEqual","onError","onSuccess","onSettled","useErrorBoundary","mutations","throwOnError","onMutate","defaultConfigRef","current","invalidQueryKey","queryHash","parse","Error","then","direct","Promise","resolve","body","recover","result","e","f","arguments","apply","reject","pact","state","s","v","o","bind","observer","onFulfilled","onRejected","callback","_this","thenable","test","awaitBody","shouldContinue","_resumeAfterBody","_resumeAfterTest","thrown","finalizer","queryCache","makeQueryCache","queryCaches","actionInit","actionFailed","actionMarkStale","actionMarkGC","actionFetch","actionSuccess","actionError","actionSetState","frozen","defaultConfig","globalListeners","configRef","isFetching","notifyGlobalListeners","values","reduce","acc","query","forEach","subscribe","cb","push","splice","indexOf","clear","notify","getQueries","predicate","exact","filter","getQuery","getQueryData","data","removeQueries","cancelQueries","cancel","invalidateQueries","refetchActive","refetchInactive","all","instances","instance","fetch","invalidate","err","resetErrorBoundaries","throwInErrorBoundary","buildQuery","userQueryKey","makeQuery","infinite","canFetchMore","getFetchMore","pageVariables","scheduleStaleTimeout","heal","scheduleGarbageCollection","setTimeout","fallbackInstance","prefetchQuery","force","isStale","setQueryData","setData","initialData","hasInitialData","initialStatus","queryReducer","type","dispatch","action","onStateUpdate","clearTimeout","staleTimeout","Infinity","cacheTimeout","markedForGarbageCollection","refetch","cancelled","cancelPromises","promise","clearIntervals","clearInterval","setState","retryTimeout","id","refetchIntervalId","updateConfig","oldConfig","minInterval","setInterval","refetchIntervalInBackground","run","wasSuspended","unsubscribe","tryFetchData","fn","shouldContinueRetryOnFocus","failureCount","delay","fetchMore","originalQueryFn","rebuiltPageVariables","shift","nextCursor","pageArgs","fetchMoreInfo","previous","isFetchingMore","newArgs","newData","getCallbackInstances","callbackInstances","unshift","newState","switchActions","updatedAt","Date","now","visibilityChangeEvent","focusEvent","onWindowFocus","catch","removePreviousHandler","setFocusHandler","handleFocus","addEventListener","removeEventListener","queryCacheContext","React","createContext","useQueryCache","useContext","ReactQueryCacheProvider","children","resolvedQueryCache","useMemo","useEffect","configContext","useConfigContext","ReactQueryConfigProvider","configContextValue","newConfig","contextShared","contextQueries","contextMutations","useGetLatest","ref","useRef","useCallback","useQueryArgs","useMountedCallback","mounted","handleSuspense","queryInfo","useIsFetching","useReducer","unsafeRerender","rerender","_await","getDefaultState","_catch","actionReset","_async","actionLoading","actionResolve","actionReject","mutationReducer","useMutation","mutationFn","unsafeDispatch","getMutationFn","getConfig","latestMutationRef","mutate","variables","mutationId","isLatest","snapshotValue","reset","useBaseQuery","useState","instanceRef","useQuery","usePaginatedQuery","lastDataRef","latestData","resolvedData","overrides","paginatedQueryInfo","useInfiniteQuery"],"mappings":"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"}